import numpy as np
import random

def func(x, t):
    if x <= 0:
        return 0
    elif x <= t:
        return x
    else:
        return t

def summing(i,m,y2):
    sumy = 0
    for j in range(m):
        sumy = sumy + y2[j]
    return sumy - y2[i]

def subtract_vectors(v, w):
    return [vi - wi for vi, wi in zip(v, w)]
    
m = int(input())
data = []
for i in range(m):
    inp = list(map(int, input().split()))
    data.append(inp)

n = len(data[0])

w = []
for i in range(m):
    inp_w = list(map(lambda x: x/2, data[i]))
    w.append(inp_w)

t = n/2
    
#e = random.uniform(0,1/m)
e = 0.3
emax = 0.1

u = np.zeros([m,m])
for i in range(m):
    for j in range(m):
        if i == j:
            u[i,j] = 1
        else:
            u[i,j] = -1*e

print(e)
print(t)
print(u)

x = list(map(int,input().split()))

s1 = []
for i in range(m):
    sumx = 0
    for j in range(n):
        sumx = sumx + x[j]*w[i][j]
    #print(sumx + t)
    sumx = sumx + t
    s1.append(sumx)
print(s1)

y2 = []
for i in range(m):
    y2.append(func(s1[i],t))
print(y2)

for z in range(10):

    s2 = []
    for i in range(m):
        sumy = summing(i,m,y2)
        inp_s2 = y2[i] - e*sumy
        s2.append(inp_s2)
    #print(s2)
    
    y2_prev = y2.copy()
    
    y2 = []
    for i in range(m):
        y2.append(func(s2[i],t))
    
    print(z,y2_prev,y2,sum(subtract_vectors(y2,y2_prev)),end = '\n')
    if abs(sum(subtract_vectors(y2,y2_prev))) < emax:
        break
    
'''
1 -1  1 -1  1 -1  1 -1  1
-1 1 -1  1  1  1 -1  1 -1
1  1  1  1 -1  1  1  1  1

1 -1 -1 -1 1 -1 1 -1 1

N = 16 (размерность каждого образа) входных синапса и размерность входных векторов
M = 4 (число образов) нейрона

Веса первого слоя
Матрица 16*4 (n*m)
Делим каждый ее элемент на два
Порог каждого образа равен = n/2 

Веса второго слоя
0 < рандомно < 1/число образов

Алгоритм
Подаем X размерностью n
Считаем, s образа = сумма (x*вес) + T

аксон второго слоя (y) = S

затем y = y - вес второго * сумма всех y кроме указанного

https://neuronus.com/theory/nn/965-nejronnye-seti-khemminga.html#sel=214:1,214:2
'''
