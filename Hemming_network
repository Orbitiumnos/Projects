import numpy as np
import random

def func(x, t):
    if x <= 0:
        return 0
    elif x <= t:
        return x
    else:
        return t

def summing(i,m,y2):
    sumy = 0
    for j in range(m):
        sumy = sumy + y2[j]
    return sumy - y2[i]

def subtract_vectors(v, w):
    return [vi - wi for vi, wi in zip(v, w)]

train = []

file = open('train_samples.txt','r')
text = file.read()
file.close()

text = text.splitlines()

for i in range(len(text)):
    train.append(list(map(int,text[i].split())))

data = train.copy()

n = len(data[0])
m = len(data)

w = []
for i in range(m):
    inp_w = list(map(lambda x: x/2, data[i]))
    w.append(inp_w)

t = n/2
    
#e = random.uniform(0,1/m)
e = 0.3
emax = 0.1

u = np.zeros([m,m])
for i in range(m):
    for j in range(m):
        if i == j:
            u[i,j] = 1
        else:
            u[i,j] = -1*e
            
#print(e)
#print(t)
#print(u)

file = open("test_samples.txt","r") 
test = file.read()
file.close()
x = list(map(int,test.split()))

s1 = []
for i in range(m):
    sumx = 0
    for j in range(n):
        sumx = sumx + x[j]*w[i][j]
    sumx = sumx + t
    s1.append(sumx)
print(s1)

y2 = []
for i in range(m):
    #y2.append(func(s1[i],t))
    y2.append(s1[i])
print(y2)

for z in range(10):

    s2 = []
    for i in range(m):
        sumy = summing(i,m,y2)
        inp_s2 = y2[i] - e*sumy
        s2.append(inp_s2)
    #print(s2)
    
    y2_prev = y2.copy()
    
    y2 = []
    for i in range(m):
        y2.append(func(s2[i],t))
        
    razn = sum(subtract_vectors(y2,y2_prev))
    
    print(z,["{:.2f}".format(value) for value in y2_prev],["{:.2f}".format(value) for value in y2],"{:.2f}".format(razn),end = '\n')
    
    if abs(((razn)**2)**(1/2)) < emax:
        break

y2 = ["{:.2f}".format(value) for value in y2_prev]
print(y2)

file = open("result_hem.txt",'w')
file.write(' '.join(map(str, y2)))
file.close()
