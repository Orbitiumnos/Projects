#4_min4
def min4(x,y):
    minim = min(x,y)
    return minim
a = int(input())
b = int(input())
c = int(input())
d = int(input())
res = min4(min4(a,b),min4(c,d))
print(res)



#4_dlina_otrezka
def dlina(x,y):
    l = max(x,y)-min(x,y)
    return l
def pif(a,b):
    c = (a**2+b**2)**(0.5)
    return c
    
x1 = int(input())
y1 = int(input())
x2 = int(input())
y2 = int(input())

res = pif(dlina(x1,x2),dlina(y1,y2))
print(res)



#4_perimetr
def dlina(x,y):
    l = max(x,y)-min(x,y)
    return l
def pif(a,b):
    c = (a**2+b**2)**(0.5)
    return c
    
x1 = int(input())
y1 = int(input())
x2 = int(input())
y2 = int(input())
x3 = int(input())
y3 = int(input())

res = pif(dlina(x1,x2),dlina(y1,y2)) + pif(dlina(x1,x3),dlina(y1,y3)) + pif(dlina(x3,x2),dlina(y3,y2))
print('{0:.6f}'.format(res))



#4_prinadlegit_tochka_1
def IsPointInSquare (x,y):
    return (x**2)*(y**2) <= 1 

x = float(input())
y = float(input())

if IsPointInSquare(x,y):
  print('YES')
else:
  print('NO')



#4_prinadlegit_tochka_2
def IsPointInSquare(x,y):
    return abs(x) <= 1-abs(y)

x = float(input())
y = float(input())

if IsPointInSquare(x,y):
  print('YES')
else:
  print('NO')



#4_prinadlegit_krugu
x = float(input())
y = float(input())
xc = float(input())
yc = float(input())
r = float(input())

def R2(x,y,xc,yc):
  r2 = ((xc-x)**2+(yc-y)**2)**(0.5)
  return r2
def IsPointInCircle(x,y,xc,yc,r):
  return r >= R2(x,y,xc,yc)

if IsPointInCircle(x,y,xc,yc,r):
  print('YES')
else:
  print('NO')



#4_prinadlegit_ploshadi
x = int(input())
y = int(input())
def IsPointInArea(x,y):
    p1 = (y<1) and (y<=-x) and (y<=2*x+2)
    p2 = (y>1) and (y>=-x) and (y>=2*x+2)
    p3 = 2>=((-1-x)**2+(1-y)**2)**(0.5)
    p4 = 2<=((-1-x)**2+(1-y)**2)**(0.5)
    a = (p1 and p4) or (p2 and p3)
    return a
print(IsPointInArea(x,y))



#4_xor
x = int(input())
y = int(input())
def xor(x,y):
    return x != y
print(int(xor(x,y)))



#4_min_delitel
def MinDivisor(x):
    i = 1
    while i <= x:
      if (x%i==0) and (i!=1):
        break  
      i = i + 1
    return(i)

x = int(input())
print(MinDivisor(x))



#4_prov_prostota
def IsPrime(x):
    i = 2
    while i < x:
      if (x%i==0):
        break
      i = i + 1
    return i != x

x = int(input())
print(IsPrime(x))



#4_vozv_v_step
def step(a,n):
    if n == 0:
      return 1
    return a * step(a,n-1)
    
a = int(input())
n = int(input())
print(step(a,n))



#4_otr_step
def power(a,n):
 res = 1
 while n != 0:
  res = res * a
  n = n - 1
 return res
  
a = int(input())
n = int(input())
print(power(a,n))



#4_slog_ot_slog
def sum(a,b):
    a = a-1
    b = b+1
    if a < 0:
      return b-1
    sm = sum(a,b)
    return sm
       
a = int(input())
b = int(input())
minn = min(a,b)
maxn = max(a,b)
print(sum(minn,maxn))



#4_bystr_stepen
def step(a,n):
    if n == 0:
      return 1
    elif n%2 == 0: 
      return (a**2)**(n/2)
    else:
      return a*step(a,n-1)
    
a = int(input())
n = int(input())
print(step(a,n))



#4_flg_gom
def maxim(n,m):
    max_n = max(n,m)
    min_n = min(n,m)
    return(max_n,min_n)

def gcd(n,m):
    n,m = maxim(n,m)
    while n%m != 0:
      ost = n%m
      n = m
      m = ost
    return(m)
    
n = int(input())
m = int(input())
print(gcd(n,m))



#4_socr
def maxim(n,m):
    max_n = max(n,m)
    min_n = min(n,m)
    return(max_n,min_n)

def gcd(n,m):
    n,m = maxim(n,m)
    while n%m != 0:
      ost = n%m
      n = m
      m = ost
    return(m)
    
def ReduceFraction(n,m):
    s = gcd(n,m)
    if s!=1:
      n = n/s
      m = m/s
      ReduceFraction(n,m)
    return(n,m)  
    
n = int(input())
m = int(input())
print(ReduceFraction(n,m))



#4_fibbonachi
def fib(n):
    i = 2
    n_1 = n_2 = 1
    n_1 = fib2(n,i,n_1,n_2)
    return(n_1)
    
def fib2(n,i,n_1,n_2):
    if n < i:
      return(n_1)
    else:
      n_1, n_2 = n_2, n_1+n_2
      i = i + 1
      n_1 = fib2(n,i,n_1,n_2)
      return(n_1)

n = int(input())
print(fib(n))



#4_sochet
def C(n,k):
    if n == k:
      return 1
    elif k == 1:
      return n
    res = C(n-1,k) + C(n-1,k-1)
    return res
    
n = int(input())
k = int(input())
print(C(n,k))

#4_summa_posled
def s(n):
  n = int(input())
  if n == 0:
    return n
  sum = n + s(n)
  return sum

n = int(input())
print(s(n)+n)

#4_razvorot_posled
def pr():
    a = int(input())
    if a == 0:
      print(a)
      return 
    pr()
    print(a)
pr()
