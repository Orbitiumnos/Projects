'''
Что я вижу под данной профессией - работает с потоками данных, анализирует и проверяет данные. 
Координирует группы разработки

Почему я смогу ее получить - я точно так же разбирался когда первый раз пришел, сейчас будет проще. 
Мне проще понимать мой функционал и системы оценки

ETL Datastage - процесс выгрузки (сверяет сколько выгрузилось с тем, сколько надо), 
очистки от ошибок (неверный формат, нет обязательных значений, составляется отчет), 
трансформация согласно маппингу когда к исходной таблице приставится еще n столбцов 
в которые затем занесутся данные согласно меппингу  структуры, загрузка

Архитектура - представлена тремя схемами: хаб - промежуточная база хранения, ядро - основное хранилище с детальными 
(извлекаемых из систем)и агрегированными (суммарными показателями) данными и витрины для представления информации пользователям. 
Все загрузки в схемы с источников и между ними делаются при помощи etl. 
Так же осуществляется проверка dq, имеется система флагов которая журналирует загрузки, 
но не описывает это детально и нет перезагрузки данных. Затем система выгружается либо в эксель, 
либо в SAP BI для формирования отчетности

Teradata - https://habr.com/ru/post/209078/, http://www.sql.ru/forum/157336-a/chto-za-zver-takoy-teradata

OLAP  - оперативный анализ данных. Для него нужно olap-хранилище в которое трансформацией загружается информация. 
По сути, формируем кубы которые можно резать и представлять в двумерном виде. 
Когда режешь, то значение вдоль которой режем называется меткой. 
Oracle Express Server - olap server. 
Архитектура баз следующая: либо многомерная где детализированные данные и агрегаты хранятся только в многомерной, 
реляционная, где детальные хранятся в реляционной а агрегаты в системных и гибридная, 
где детальные - в реляционной, а  агрегаты - в многомерной

Звезда и снежинка - в звезде есть одна таблица фактов которая денормализована, 
содержит детальные данные и агрегаты, и таблицы измерений которые связаны ключами. 
В снежинке таблицы измерений нормализованы, также соединены ключами

алгоритм взаимосвязей;
алгоритм кластеризации;
алгоритм дерева принятия решений;
алгоритм линейной регрессии;
алгоритм логистической регрессии;
упрощенный алгоритм Байеса;
алгоритм нейронной сети;
алгоритм кластеризации последовательностей;
алгоритм временных рядов
'''

/*
1. 4 графика + текст
2. свот + npv + конкуренты
3. денежный поток + теххарактеристики + 3 графика + показатели
4. поток УК + текремонт + капремонт + структура

Поменять NPV - снизить повышение стоимости, увеличить налог
В графиках сделать все в %
Придумать какие графики делать (4 + текст)

число сделок - премиальный сегмент, штук  40  40  50  90  70  75  80  68  80  82  50  80  45  50  68
число сделок - элитный сегмент, штук  15  13  5 20  20  28  10  47  30  37  29  25  31  41  35
средний бюджет сделки - премиальный сегмент, млн руб  39  45  44  46  47  46  42  65  50  60  50  60  50  58  68
средний бюджет сделки - элитный сегмент, млн руб  108 105 115 130 135 110 173 119 149 118 98  115 140 140 130

Начало работ  27%
Возведение монолита 15%
Фасадные работы 10%
Внутренние работы/отделка 6%
Сдан  42%
*/

Савлук Иван Александрович

Отдел поддержки и развития систем принятия решений

Высокий уровень знания SQL, PL/SQL;
Хорошее знание одного или нескольких объектных языков программирования (SAS, Python, C++, С#, Java и т.д.);
Понимание механизмов работы web-сервисов (XML, XSD, JSON, SOAP);
Желание учиться новому и работать;

Понимание этапов тестирования доработок;
Опыт в бизнес или системном анализе;
Практики continuous integration и continuous delivery;
Опыт работы с JIRA и Confluence;
Понимание цикла разработки ПО, знание Agile-методологий (Scrum, Kanban)

Ищем главного риск-технолога в команду в команду риск-технологий по развитию систем принятия кредитных решений. Мы разрабатываем логику автоматической проверки соискателей на получение кредита, проектируем бизнесы-процессы, автоматизируем и развиваем алгоритмы проверки, выстраиваем взаимодействие с внешними источниками данных (Бюро кредитных историй, гос.сервисы, телеком).

Мы работаем по принципам Scrum, что предполагает динамичный темп разработки, а также возможность развития и профессионального роста за рамками своей роли.

Проводить бизнес и системный анализ задач на развитие наших систем (SAS RTDM, Oracle);
Предлагать и выбирать архитектурные варианты разработки;
Разрабатывать логику и алгоритмы в наших системах;
Дорабатывать интеграцию с внешними источниками данных (Бюро кредитных историй, гос.сервисы, телеком, антифрод и т.д.);
Проектировать слои данных, образующихся и использующихся при проверке клиентов;
Разрабатывать процедуры парсинга и преобразования данных (Oralce, xlm);
Проводить тестирование доработок;
Собирать установочные пакеты;
Контактировать со смежными подразделениями если доработки предполагают их участие;
Разбирать аномальные случаи работы алгоритмов наших систем;
Модернизировать деятельность нашей команды (GIT, автотесты, автоматизация операционных процессов и т.д.).

Опыт работы в розничном кредитовании;
Знание продуктов SAS (SAS Base, SAS macro, SAS RTDM, SAS EnterpriseGuide);
Навыки автоматизации рутины на shell, python, bash и т.д;

--------------------------------------------------------------

https://habr.com/ru/company/skillbox/blog/436442/
https://vimeo.com/78874763

Парное программирование 
- свойственно agile
- драйвер и навигатор
- один доносит инструкцию и смотрит все написанное, второй пишет код
- необходимо меняться, норма - 30 мин

Кость, завтра на планировании тебе нужно будет представить план использования наблюдателя при разработке, я тут накидал идеи которые можно использовать. Часть из этого у нас применяется, но не так как надо, ознакомься:
- обязательное тестирование доработок (наблюдатель должен посмотреть на результаты тестирования)
- код ревью при принятии (наблюдатель должен просмотреть каждую строку кода)
- ответственность проверяющего
- обязательны комменты (можно придумать специальную форму которая будет объяснять концепцию доработки)
- наблюдатель обязателен на целевых задачах, где есть разработка и заказчик
- закладывать задачу по ревью доработок в спринт
- ревьюером должен быть тот, кто уже успешно делал в прошлом подобную задачу
