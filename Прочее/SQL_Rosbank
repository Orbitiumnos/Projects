-- тестирование Q1

/*
1.	Напишите запрос, который покажет всех аналитиков, у которых все задачи в статусе «Не начато»
*/

with 
periods(Analyst, CR, Task, Start, End, ST_ID) as (
  values
  ('Березова Е.','111','FS','11.01.2019','20.01.2019','2'),
  ('Березова Е.','111','Mapping','22.01.2019','01.03.2019','2'),
  ('Березова Е.','111','Test','04.03.2019','29.03.2019','1'),
  ('Березова Е.','111','UAT','11.03.2019','05.04.2019','0'),
('Березова Е.','124','Test','24.01.2019','30.01.2019','2'),
('Березова Е.','113','Test','08.04.2019','19.04.2019','0'),
('Кошкина О.','105','FS','01.02.2019','08.02.2019','0'),
('Кошкина О.','113','Mapping','05.03.2019','22.03.2019','0'),
('Тапочкина Н.','124','FS','20.01.2019','22.01.2019','2'),
('Тапочкина Н.','124','Mapping','23.01.2019','23.01.2019','2'),
('Тапочкина Н.','113','FS','01.03.2019','07.03.2019','2')
),
holidays (ID,ST_NM) as (
  values 
  ('0','Не начато'),
  ('1','В работе'),
  ('2','Выполнено')
)
SELECT ANALYST FROM periods where analyst not in 
(
  SELECT ANALYST
  FROM periods t1
  JOIN holidays t2 ON t1.ST_iD = t2.ID AND ST_NM IN ('В работе','Выполнено')
)
GROUP BY ANALYST
WITH UR;

/*
2.	Напишите запрос, который покажет всех аналитиков, у которых больше трёх выполненных задач (включительно)
*/

with 
periods(Analyst, CR, Task, Start, End, ST_ID) as (
  values('Березова Е.','111','FS','11.01.2019','20.01.2019','2'),
('Березова Е.','111','Mapping','22.01.2019','01.03.2019','2'),
('Березова Е.','111','Test','04.03.2019','29.03.2019','1'),
('Березова Е.','111','UAT','11.03.2019','05.04.2019','0'),
('Березова Е.','124','Test','24.01.2019','30.01.2019','2'),
('Березова Е.','113','Test','08.04.2019','19.04.2019','0'),
('Кошкина О.','105','FS','01.02.2019','08.02.2019','0'),
('Кошкина О.','113','Mapping','05.03.2019','22.03.2019','0'),
('Тапочкина Н.','124','FS','20.01.2019','22.01.2019','2'),
('Тапочкина Н.','124','Mapping','23.01.2019','23.01.2019','2'),
('Тапочкина Н.','113','FS','01.03.2019','07.03.2019','2')
),
holidays (ID,ST_NM) as (
  values ('0','Не начато'),
('1','В работе'),
('2','Выполнено')
)
SELECT ANALYST, COUNT(CR)
FROM periods t1
JOIN holidays t2 ON t1.ST_iD = t2.ID AND ST_NM = 'Выполнено'
GROUP BY ANALYST HAVING COUNT(CR) > 2
WITH UR;

/*
3.	Напишите запрос, который покажет всех аналитиков, у которых нет задач в работе
*/

with 
periods(Analyst, CR, Task, Start, End, ST_ID) as (
  values
  ('Березова Е.','111','FS','11.01.2019','20.01.2019','2'),
  ('Березова Е.','111','Mapping','22.01.2019','01.03.2019','2'),
  ('Березова Е.','111','Test','04.03.2019','29.03.2019','1'),
  ('Березова Е.','111','UAT','11.03.2019','05.04.2019','0'),
  ('Березова Е.','124','Test','24.01.2019','30.01.2019','2'),
  ('Березова Е.','113','Test','08.04.2019','19.04.2019','0'),
  ('Кошкина О.','105','FS','01.02.2019','08.02.2019','0'),
  ('Кошкина О.','113','Mapping','05.03.2019','22.03.2019','0'),
  ('Тапочкина Н.','124','FS','20.01.2019','22.01.2019','2'),
  ('Тапочкина Н.','124','Mapping','23.01.2019','23.01.2019','2'),
  ('Тапочкина Н.','113','FS','01.03.2019','07.03.2019','2')
),
holidays (ID,ST_NM) as (
  values 
  ('0','Не начато'),
  ('1','В работе'),
  ('2','Выполнено')
)
SELECT ANALYST FROM periods t1
WHERE ANALYST NOT IN 
( 
  SELECT ANALYST 
  FROM periods t1
  JOIN holidays t2 ON t1.ST_iD = t2.ID AND ST_NM in ('В работе')
)
GROUP BY ANALYST
WITH UR;

/*
4.	Для каждого CR определите даты начала и окончания работ по нему на основе информации по задачам
*/

with 
periods(Analyst, CR, Task, Start, End, ST_ID) as (
  values
  ('Березова Е.','111','FS','11.01.2019','20.01.2019','2'),
  ('Березова Е.','111','Mapping','22.01.2019','01.03.2019','2'),
  ('Березова Е.','111','Test','04.03.2019','29.03.2019','1'),
  ('Березова Е.','111','UAT','11.03.2019','05.04.2019','0'),
  ('Березова Е.','124','Test','24.01.2019','30.01.2019','2'),
  ('Березова Е.','113','Test','08.04.2019','19.04.2019','0'),
  ('Кошкина О.','105','FS','01.02.2019','08.02.2019','0'),
  ('Кошкина О.','113','Mapping','05.03.2019','22.03.2019','0'),
  ('Тапочкина Н.','124','FS','20.01.2019','22.01.2019','2'),
  ('Тапочкина Н.','124','Mapping','23.01.2019','23.01.2019','2'),
  ('Тапочкина Н.','113','FS','01.03.2019','07.03.2019','2')
),
holidays (ID,ST_NM) as (
  values 
  ('0','Не начато'),
  ('1','В работе'),
  ('2','Выполнено')
)
SELECT CR, min(TO_DATE(Start, 'DD.MM.YYYY')), max(TO_DATE(End, 'DD.MM.YYYY')) -- УДАЛИТЬ TO_DATE(End, 'DD.MM.YYYY')
FROM periods t1
GROUP BY CR 
WITH UR;

/*
5.	Для каждого CR покажите первую задачу по нему
*/

with 
periods(Analyst, CR, Task, Start, End, ST_ID) as (
  values
  ('Березова Е.','111','FS','11.01.2019','20.01.2019','2'),
  ('Березова Е.','111','Mapping','22.01.2019','01.03.2019','2'),
  ('Березова Е.','111','Test','04.03.2019','29.03.2019','1'),
  ('Березова Е.','111','UAT','11.03.2019','05.04.2019','0'),
  ('Березова Е.','124','Test','24.01.2019','30.01.2019','2'),
  ('Березова Е.','113','Test','08.04.2019','19.04.2019','0'),
  ('Кошкина О.','105','FS','01.02.2019','08.02.2019','0'),
  ('Кошкина О.','113','Mapping','05.03.2019','22.03.2019','0'),
  ('Тапочкина Н.','124','FS','20.01.2019','22.01.2019','2'),
  ('Тапочкина Н.','124','Mapping','23.01.2019','23.01.2019','2'),
  ('Тапочкина Н.','113','FS','01.03.2019','07.03.2019','2')
),
holidays (ID,ST_NM) as (
  values 
  ('0','Не начато'),
  ('1','В работе'),
  ('2','Выполнено')
)
SELECT * FROM (
SELECT periods.*, ROW_NUMBER() OVER (PARTITION BY CR ORDER BY TO_DATE(Start, 'DD.MM.YYYY') ASC) AS NUM FROM periods) -- удалить TO_DATE
WHERE NUM = 1
;

/*
6.	Определите, сколько открытых счетов на балансовом счёте 45705 было 26.03.2019
*/

SELECT COUNT(AU_ID) AS RES FROM HTF13.AU
WHERE 1=1
AND UNQ_ID_SRC_STM LIKE '45705%'
AND '26.03.2019' BETWEEN EFF_DT AND END_DT
WITH UR;

/*
2.1 
17.	Ниже представлена таблица EMP_SAL, которая содержит изменения заработной платы сотрудников организации. Например, Петров устроился на работу в компанию 15.02.2017 на з/п 75 000 р., после успешного завершения испытательного срока 01.04.2017 Иванову подняли з/п до 90 000 р., а 15.09.2017 его перевели на должность старшего тестировщика и снова подняли з/п до 110 000 р.
Необходимо написать SQL запрос, чтобы вывести з/п всех сотрудников на 01.06.2017.
*/

with 
EMP_SAL(Id,	Emp_id,	Surname, Salary, Date_start) as 
(
  values
  ('1','1','Иванов','70 000','01.02.2017'),
  ('2','2','Петров','75 000','15.02.2017'),
  ('3','2','Петров','90 000','01.04.2017'),
  ('4','3','Сидоров','50 000','15.06.2017'),
  ('5','1','Иванов','95 000','10.08.2017'),
  ('6','2','Петров','110 000','15.09.2017'),
  ('7','3','Сидоров','65 000','15.09.2017')
)
select DISTINCT SURNAME, LAST_VALUE(SALARY)
OVER (PARTITION BY SURNAME ORDER BY TO_DATE(date_start, 'DD.MM.YYYY') ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS RES
from EMP_SAL
where 1=1
and TO_DATE(date_start, 'DD.MM.YYYY') < '01.06.2017'
with ur;

with 
SALES(Date, Receipt_ID, Item_ID, Quantity, Price) as 
(
  values
  ('1','1','Иванов','70 000','01.02.2017'),
  ('2','2','Петров','75 000','15.02.2017'),
  ('3','2','Петров','90 000','01.04.2017'),
  ('4','3','Сидоров','50 000','15.06.2017'),
  ('5','1','Иванов','95 000','10.08.2017'),
  ('6','2','Петров','110 000','15.09.2017'),
  ('7','3','Сидоров','65 000','15.09.2017')
)

/*
2.2
18.	Ниже представлена таблица SALES с информацией о продажах в магазине. В таблице указана дата продажи, номер/идентификатор чека, артикул товара, количество купленного товара и цена за единицу товара.
Необходимо написать SQL запрос, чтобы посчитать среднюю сумму чека («средний чек») за 01.06.2017
*/

with 
SALES(Date, Receipt_ID, Item_ID, Quantity, Price) as 
(
  values
  ('31.05.2017','1','1','3','150'),
  ('31.05.2017','1','2','1','320'),
  ('31.05.2017','2','2','1','320'),
  ('01.06.2017','3','1','2','150'),
  ('01.06.2017','3','3','3','100'),
  ('01.06.2017','4','4','2','500'),
  ('01.06.2017','4','5','1','2280'),
  ('01.06.2017','4','6','1','1290'),
  ('01.06.2017','5','3','2','100'),
  ('01.06.2017','6','1','2','150'),
  ('01.06.2017','6','4','1','500'),
  ('02.06.2017','7','5','1','2280'),
  ('02.06.2017','8','5','2','2280')
)
SELECT AVG(SUMMA) FROM 
(
  select receipt_id, SUM(quantity * price) AS SUMMA 
  from SALES
  WHERE 1=1
  AND TO_DATE(date, 'DD.MM.YYYY') = '01.06.2017'
  GROUP BY receipt_id
) AS T1
WITH UR;
