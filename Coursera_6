#6 Слияние списков

def merge(a, b):
    c = []
    i, j = 0, 0
    while i < len(a) and j < len(b):
        if a[i] <= b[j]:
            c.append(a[i])
            i = i + 1
        else:
            c.append(b[j])
            j = j + 1
    c = c + a[i:]
    c = c + b[j:]
    return c

a = list(map(int,input().split()))
b = list(map(int,input().split()))
print(merge(a,b))

#6 Пересечение множеств

def intersection(a,b):
    res = []
    i,j = 0,0
    while i < len(a) and j < len(b):
        print(a[i],b[j])
        if a[i] < b[j]:
            i = i+1
        elif a[i] > b[j]:
            j = j+1
        else:
            res.append(a[i])
            i = i+1
    return res

a = list(map(int,input().split()))
b = list(map(int,input().split()))
print(intersection(a,b))

#6 Сортировка

n = int(input())
l = list(map(int,input().split()))
if len(l) != 0:
    l.sort()
    print(*l)

#6 Обувной магазин
n = int(input())
l = list(map(int,input().split()))

res = 0
for i in range(len(l)):
    if l[i] > n:
        if res == 0:
            pr = min(l)
            res = res + 1
        elif (l[i] - pr) > 3:
            pr = l[i]
            res = res + 1
print(res)

#6 Создание архива
s, n = [int(x) for x in input().split()]
p = []
for i in range(n):
    p.append(int(input()))

res = 0
for i in range(len(p)):
    #minx = min(p[i:len(p)])
    #minx = p.pop(p.index(min(p)))
    minx = p[i]
    if res + minx > s:
        break
    res = res + minx
print(res)

# *** *** *** ***

n = int(input())
peopleList = []
for i in range(n):
    tempManData = input().split()
    manData = (int(tempManData[0]), tempManData[1])
    peopleList.append(manData)
peopleList.sort()
for manData in peopleList:
    print(' '.join(map(str, manData)))

# *** *** *** ***

#6 гражданская оборона

def create_tuple (list, list_sort):
    res = []
    for i in range(len(list)):
        res.append((list_sort.index(list_sort[i]), list.index(list_sort[i])))
        #resb.append(list.index(list_sort[i]))
    return(res)

def choice(n1,n2,x):
    s1 = abs(n1-x)
    s2 = abs(n2-x)
    if s1 <= s2:
        return n1
    else:
        return n2

def getkey(item):
    return item[1]

n = int(input())
home = list(map(int,input().split()))
t1 = home.copy()
t1.sort()
resh = create_tuple(home, t1)
#print(resh)

m = int(input())
bunk = list(map(int,input().split()))
t2 = bunk.copy()
t2.sort()
resb = create_tuple(bunk, t2)
#print(resb)

rslt = []
rslt2 = []
j = 1

for i in range(len(t1)):
    if t1[i] > t2[j]:
        while t1[i] > t2[j]:
            if j == len(t2) - 1:
                break
            j = j + 1
    #print(t2[j - 1], t2[j], t1[i])
    k = choice(t2[j - 1], t2[j], t1[i])
    ind = t2.index(k)
    rslt.append(resb[ind][1])
#print(rslt)

resh = sorted(resh, key=getkey)

for i in range(len(resh)):
    rslt2.append(rslt[(resh[i][0])]+1)
print(' '.join(map(str,rslt2)))

#6 Средний балл по классам

'''
#верное решение
inFile = open('int.txt', 'r', encoding='utf8')
outFile = open('out.txt', 'w', encoding='utf8')
newlist = inFile.readlines()
listoflist = list(map(str.split, newlist))
listoflist.sort(key=lambda x: x[0])
tmp = ''
for surname, name, school, mark in listoflist:
    tmp += ' '.join((surname, name, mark)) + '\n'
print(tmp[:-1], end='', file=outFile)
outFile.close()
'''

def avg(list):
    if len(list) != 0:
        return sum(list)/len(list)
    else:
        return 0

res9 = []
res10 = []
res11 = []
with open(r'C:\Users\rb066152\Documents\Work_Data\students.txt','r') as f:
    for line in f:
        l = list(map(int,list(line.split())[2:4]))
        print(l)
        if l[0] == 9:
            res9.append(l[1])
        elif l[0] == 10:
            res10.append(l[1])
        else:
            res11.append(l[1])
print(avg(res9), avg(res10), avg(res11))

#6 Отсортировать список участников по алфавиту

def create(file):
    res = []
    with open(file, 'r') as f:
        for line in f:
            #l = list(map(str, line.split()))
            #l = [l[i] for i in [0, 1, 3]]
            l = [list(map(str, line.split()))[i] for i in [0, 1, 3]]
            res.append(tuple(l))
    return res

def getkey(note):
    return note[0]

def Sort(tup):
    tup.sort(key=lambda x: str(x[0]))
    for i in range(len(tup)):
        print(tup[i])

res = []
file = r'C:\Users\rb066152\Documents\Work_Data\students2.txt'
res = create(file)
Sort(res)

#6 Сортировка подсчетом

def CountSort(n):
    k = [0] * 101

    for i in n:
        k[i] = k[i] + 1

    n.clear()
    j = 0
    for i in k:
        n = n + [j] * i
        j = j + 1

def create(file):
    res = []
    with open(file, 'r') as f:
        for line in f:
            res = list(map(str, line.split()))
    return res

res = []
file = r'C:\Users\rb066152\Documents\Work_Data\students2.txt'
n = create(file)

n = list(map(int,input().split()))
res = CountSort(n)
print(' '.join(map(str,res)))

#6 Клавиатура

'''
Тест 1
Входные данные:
5
1 50 3 4 3
16
1 2 3 4 5 1 3 3 4 5 5 5 5 5 4 5

Вывод программы:
YES
NO
NO
NO
YES
'''

def form_lst(n, naj):
    lst = [0] * n
    for i in naj:
        lst[i - 1] = lst[i - 1] + 1
    return lst

def srav(lst, pr):
    for i in range(len(pr)):
        if lst[i] > pr[i]:
            print('YES')
        else:
            print('NO')

n = int(input())
pr = list(map(int, input().split()))
k = int(input())
naj = list(map(int, input().split()))

lst = form_lst(n, naj)
srav(lst, pr)

#6 Максимальный балл по классам
