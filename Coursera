#1_18
#row = [0,1,2,50]
#for num in row: 
#  print(0**(num), num, num//1, num%1)

#v = int(input())
#s = int(input())
#res1 = s // v
#res2 = 0**(s%v)
#print('result:',res1,res2, 1 + res1 - res2)

#2_
#print(48**(0.5))
#n = int(input())
#i = 1
#while i <= (n**(0.5)):
#  print(i**2)
#  i = i + 1

#2_
#print(6.42//1, 6.42%1)
#n = int(input())
#i = 2
#num = n
#while i < n:
#  res = (n/i)
#  #print(res)
#  if res%1 == 0:
#   num = int(res)
#  i = i + 1
#print('answer:',num)

#2_
#n = int(input())
#res = 1
#while res <= n:
#  print(res)
#  res=res*2

#2_
#n = int(input())
#res = 1
#while res < n:
#  print(res)
#  res=res*2
#if res == n:
#  print('final: yes')
#else:
#  print('no')

#2_
#print(6.42//1, 6.42%1)
#n = int(input())
#i = 2
#num = n
#while i < n:
#  res = (n/i)
#  #print(res)
#  if res%1 == 0:
#   num = int(res)
#  i = i + 1
#print('answer:',num)

#2_
#n = int(input())
#res = 1
#while res <= n:
#  print(res)
#  res=res*2

#2_
#n = int(input())
#res = 1
#i = 0
#while res < n:
#  print(res)
#  res=res*2
#  i = i + 1
#print('res:',i)

#2_probegka
#x = int(input())
#y = int(input())
#i = 1
#while x < y: 
#  x = x + x*(0.1)
#  i = i + 1
#  #print(i, x)
#print('res:',i)

#2_
#i = 1
#max = 0
#while i != 0:
#  i = int(input())
#  if i > max:
#    max = i
#print(max)

#2_
#i = 0
#sum = 0
#n = int(input())
#while i <= n:
#  #print(i,sum)
#  sum = sum + i**2
#  i = i + 1
#print(sum)

#2_len
#i = 1
#len = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  len = len + 1
#  print('len:',len)
#print('res:',len)

#2_sum
#i = 1
#sum = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  sum = sum + i
#  print('sum:',sum)
#print('res:',sum)

#2_sred
#i = 1
#sum = 0
#len = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  sum = sum + i
#  len = len + 1
#  print(len,sum)
#print('sred:',sum/len)

#2_chet
#i = 1
#len = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  elif i%2 == 0:
#    len = len + 1
#  #print(len)
#print('chet:',len)

#2_pred
#i = 1
#i_prev = 0
#len = -1
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  elif i > i_prev:
#    len = len + 1
#  #print(i, i_prev, len)
#  i_prev = i
#print('chet:',len)

#2_sec_max
#i = 1
#max = 0
#prev_max = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  elif i > prev_max:
#    if i < max:
#      prev_max = i
#    else:
#      prev_max = max
#      max = i
#  #print(i, i_prev, len)
#print('prev_max:', prev_max)

#2_len_max
#i = 1
#max = 0
#prev_max = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  if i > max:
#    len = 1
#    max = i
#  elif i == max:
#    len = len + 1
#print('len_max:', len)

#2_fib
#i_1 = 1
#i_2 = 0
#num = 1
#n = int(input())
#while num < n:
#  i = i_1 + i_2
#  #print(i)
#  i_2 = i_1
#  i_1 = i
#  num = num + 1
#print(i_1)

#2_fib_num
#i_1 = 1
#i_2 = 0
#num = 1
#i = 0
#a = int(input())
#while i < a:
#  i = i_1 + i_2
#  i_2 = i_1
#  i_1 = i
#  num = num + 1
#  #print(i_1, num)
#if a == 0:
#  num = 0
#elif i > a:
#  num = -1
#print('res:',num)

#2_razd
#a = int(input())
#b = int(input())
#while a > b:
#  if a%2 == 0:
#    if a/2 > a-b:
#      a = a-1
#      print('-1',a)
#    else: 
#      a = a/2
#      print(':2',a)
#  else: 
#    a = a-1
#    print('-1', a)
#print('res=',a)

#2_obr
#a = int(input())
#res = a
#len = 1
#while res > 9:
#  res = res//10
#  len = len + 1
#  #print(res, len)
##print (len)
#n_1 = 10**(len-1)
#n_2 = 1
#num = a
#sum = 0
#res = 0
#while n_1 >= 1:
#  sum = num // n_1 * n_2
#  num = num % n_1
#  n_2 = n_2 * 10
#  n_1 = n_1 / 10
#  res = sum + res
#  #print('num:',num,'sum:',sum, 'res:',res)
#print('answer:',int(res))

#2_palindr
#b = int(input())
#a = 1
#col = 0
#while a <= b: 
#  res = a
#  len = 1
#  while res > 9:
#    res = res//10
#    len = len + 1
#  n_1 = 10**(len-1)
#  n_2 = 1
#  num = a
#  sum = 0
#  res = 0
#  while n_1 >= 1:
#    sum = num // n_1 * n_2
#    num = num % n_1
#    n_2 = n_2 * 10
#    n_1 = n_1 / 10
#    res = sum + res
# if res == a:
#    col = col + 1
#  print('a:',a,'res:',res,'col:',col)
#  a = a + 1
#print(int(col))

#2_posled
#i = 1
#len = 0
#i_prev = 0
#max = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  elif i == i_prev:
#    len = len + 1
#    if len > max:
#      max = len
#  elif i != i_prev:
#    if len > max:
#      max = len
#    len = 1
#  #print(i,len)
#  i_prev = i
#print(max)

#2_monot
#i = 1
#len = 0
#max = 0
#i_prev = 0
#flag_prev = 0
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  if i != i_prev:
#    if i > i_prev:
#      flag = 0
#      if flag == flag_prev:
#        len = len + 1
#      else:
#        len = 2
#      if len > max:
#        max = len
#    else: 
#      flag = 2
#      if flag == flag_prev:
#       len = len + 1
#      else:
#        len = 2
#      if len > max:
#        max = len
#  else:
#    flag = 1
#    len = 1
#  #print('i:',i,'i_prev:',i_prev,'len:',len,'max:',max)
#  flag_prev = flag
#  i_prev = i
#print(max)

#2_monot
#i = 1
#i_1 = 0
#i_2 = 0
#n = 0
#loc_min = 0
#prev_loc_min = n
#n_loc_min = 0
#n_prev_loc_min = 0
#s = 0
#min = 99
#res_min = 0
#while i != 0:
#  i = int(input())
#  n = n+1
#  if i == 0:
#    continue
#  if i_2 < i_1 > i:
#    prev_loc_min = loc_min
#    loc_min = i_1
#    n_prev_loc_min = n_loc_min
#    n_loc_min = n
#    s = n_loc_min - n_prev_loc_min
#    if n_prev_loc_min == 0:
#      res_min = 0
#    elif s < min:
#      min = s
#      res_min = min
#  i_2 = i_1
#  i_1 = i
#  print('i:',i,'n:',n,'loc_min:',loc_min,'prev_loc_min:',prev_loc_min,'n_loc_min:',n_loc_min,'n_prev_loc_min:',n_prev_loc_min,'min:',res_min,'s:',s)
#print('result:',res_min)

#3_triangle
#n = 0
#a = int(input())
#b = int(input())
#c = int(input())
#p = (a+b+c)/2
#s = (p*(p-a)*(p-b)*(p-c))**(1/2)
#print('{0:.6f}'.format(s))

#3_sum
#i = 1
#r = 0
#n = int(input())
#while i <= n:
#  r = (1/(i**2))+r
#  print('i:',i,'r:',r)
#  i = i + 1
#print('{0:.5f}'.format(r))

#3_drob
#x = float(input())
#r = x - int(x)
#print('{0:.3f}'.format(r))

#3_price
#i = float(input())
#rub = int(i)
#cop = int((i - int(i))*100)
#print(rub, cop)

#3_rus_stand
#import math
#i = float(input())
#if i-int(i) < 0.5:
#  res = math.floor(i)
#else:
#  res = math.ceil(i)
#print(res)

#3_percent
#r = int(input())
#x = int(input())
#y = int(input())
#x = x + y/100
#x = (x * (1+r/100))
#print(x)
#rub = int(x)
#cop = round((x - int(x))*100)
#print(rub, cop)

#3_percent_2
#i = 0
#r = int(input())
#x = int(input())
#y = int(input())
#k = int(input())
#while i < k: 
#  x = x+y/100
#  x = x*(1+r/100)
#  i = i + 1
#  rub = int(x)
#  cop = round((x - int(x))*100)
#  #print('year:',i,rub, cop)
#print(rub, cop)

'''
#3_horner
n = int(input())
x = float(input())
horn = 0
while n!=-1:
  a = int(input())
  sum = a*(x**(n)) 
  n = n-1
  horn = horn + sum
  print("horn: {0}*{1}^{2}".format(a,x,n+1))
print("res:",'{0:.1f}'.format(horn))
'''

#3_stdn   
#n = 0
#s = 0
#sum = 0
#sum_kv = 0
#i = 1
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  sum = sum + i
#  sum_kv = sum_kv + i ** 2
#  n = n + 1
#  s = sum/n
#  print('sum:',sum,'sum_kv:',sum_kv,'sred_kv:',s,'n:',n)
#print('res:', ((sum_kv-((sum**2)/n))/(n-1))**(1/2))

#3_stdn   
#n = 0
#s = 0
#sum = 0
#sum_kv = 0
#i = 1
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  sum = sum + i
#  sum_kv = sum_kv + i ** 2
#  n = n + 1
#  s = sum/n
#  print('sum:',sum,'sum_kv:',sum_kv,'sred_kv:',s,'n:',n)
#print('res:', ((sum_kv-((sum**2)/n))/(n-1))**(1/2))

#3_kv_urav
#a = float(input())
#b = float(input())
#c = float(input())
#d = b**2-4*a*c
#if d > 0:
#  x1 = ((-1)*b+d**(0.5))/2*a
#  x2 = ((-1)*b-d**(0.5))/2*a
#  print('{0:.6f}'.format(x2),'{0:.6f}'.format(x1))
#elif d == 0:
#  x = (-1*b)/2*a
#  print('{0:.6f}'.format(x))
#else:
#  print('net reshenia')

'''
#3_kv_urav_2
a = float(input())
b = float(input())
c = float(input())
if a == 0:
  if b == 0:
    if c == 0:
      print('3')
    else:
      print('0')
  else:
    if c == 0:
      x = 0
      print('1',x)
    else:
      x = -c/b
      print('1',x)
else:
  d = (b**2)-(4*a*c)
  if d > 0:
    x1 = ((-1)*b+d**(0.5))/(2*a)
    x2 = ((-1)*b-d**(0.5))/(2*a)
    print('2','{0:.6f}'.format(x2),'{0:.6f}'.format(x1))
  elif d == 0:
    x = (-1)*b/(2*a)
    print('1','{0:.6f}'.format(x))
  else:
    print('0')
'''

'''
#3_lin_urav
A = int(input('A:'))
B = int(input('B:'))
C = int(input('C:'))
D = int(input('D:'))
E = int(input('E:'))
F = int(input('F:'))
x = (E*D-F*B)/(A*D-C*B)
y = (E*A-F*C)/(A*D-C*B)
print(x,y)
'''

'''
#3_lin_urav
A = int(input('A:'))
B = int(input('B:'))
C = int(input('C:'))
D = int(input('D:'))
E = int(input('E:'))
F = int(input('F:'))

if A==0==C and B!=0 and D!=0: #4
  y = E/B
  print('4',y)
elif B==0==D and A!=0 and C!=0: #3
  x = E/A
  print('3',x)
elif B==0==D==A==C: #5
  print('5')
elif A//C==B//D==E//F and A%C==B%D==E%F: #1
  p = E/B
  q = -A/B
  print('1',p,q)
else: # 0 2
  x = (E*D-F*B)/(A*D-C*B)
  y = (E*A-F*C)/(A*D-C*B)
  print('2',x,y)
#print("Urav: {0}*{3} + {1}*{4} = {2}".format(A,B,E,x,y))
#print("Urav: {0}*{3} + {1}*{4} = {2}".format(C,D,F,x,y))
'''

'''
#3_srez
string = input()
print(string[2])
print(string[-2])
print(string[0:6])
print(string[:-2])
print(string[0::2])
print(string[1::2])
print(string[-1::-1])
print(string[-1::-2])
print(len(string))
'''

'''
#3_perv_i_posl
string = input()
pos1 = string.find('f')
pos2 = len(string)-string[-1::-1].find('f')-1
if pos1 == pos2:
  print(pos1)
elif pos1 == -1:
  print()
else:
  print(pos1, pos2)
'''

'''
#3_udalenie_frag
string = input()
pos1 = string.find('h')
pos2 = len(string)-string[-1::-1].find('h')-1
string2 = string[:pos1]+string[pos2+1:]
print(string2)
'''

'''
#3_povt_frag
string = input()
pos1 = string.find('h')
pos2 = len(string)-string[-1::-1].find('h')-1
#print(pos1,pos2)
if pos1 == pos2:
  print(string[pos1+1:]*2)
elif pos1 == -1:
  print()
else:
  print(string[pos1+1:pos2]*2)
'''

'''
#3_vtoroe_vhojd
string = input()
pos1 = string.find('f')
string2 = string[pos1+1:]
pos11 = string2.find('f')+1+pos1
if string.find('f')==-1:
  print('-2')
elif string2.find('f')==-1:
  print('-1')
else:
  print(pos11)
'''

'''
#3_vtoroe_vhojd
string = input()
pos = string.find(' ')
string2 = string[pos+1:]+string[pos]+string[:pos]
print(string2)
'''

#3_stdn   
#n = 0
#s = 0
#sum = 0
#sum_kv = 0
#i = 1
#while i != 0:
#  i = int(input())
#  if i == 0:
#    continue
#  sum = sum + i
#  sum_kv = sum_kv + i ** 2
#  n = n + 1
#  s = sum/n
#  print('sum:',sum,'sum_kv:',sum_kv,'sred_kv:',s,'n:',n)
#print('res:', ((sum_kv-((sum**2)/n))/(n-1))**(1/2))

#3_kv_urav
#a = float(input())
#b = float(input())
#c = float(input())
#d = b**2-4*a*c
#if d > 0:
#  x1 = ((-1)*b+d**(0.5))/2*a
#  x2 = ((-1)*b-d**(0.5))/2*a
#  print('{0:.6f}'.format(x2),'{0:.6f}'.format(x1))
#elif d == 0:
#  x = (-1*b)/2*a
#  print('{0:.6f}'.format(x))
#else:
#  print('net reshenia')

'''
#3_kv_urav_2
a = float(input())
b = float(input())
c = float(input())
if a == 0:
  if b == 0:
    if c == 0:
      print('3')
    else:
      print('0')
  else:
    if c == 0:
      x = 0
      print('1',x)
    else:
      x = -c/b
      print('1',x)
else:
  d = (b**2)-(4*a*c)
  if d > 0:
    x1 = ((-1)*b+d**(0.5))/(2*a)
    x2 = ((-1)*b-d**(0.5))/(2*a)
    print('2','{0:.6f}'.format(x2),'{0:.6f}'.format(x1))
  elif d == 0:
    x = (-1)*b/(2*a)
    print('1','{0:.6f}'.format(x))
  else:
    print('0')
'''

'''
#3_lin_urav
A = int(input('A:'))
B = int(input('B:'))
C = int(input('C:'))
D = int(input('D:'))
E = int(input('E:'))
F = int(input('F:'))
x = (E*D-F*B)/(A*D-C*B)
y = (E*A-F*C)/(A*D-C*B)
print(x,y)
'''

'''
#3_lin_urav
A = int(input('A:'))
B = int(input('B:'))
C = int(input('C:'))
D = int(input('D:'))
E = int(input('E:'))
F = int(input('F:'))

if A==0==C and B!=0 and D!=0: #4
  y = E/B
  print('4',y)
elif B==0==D and A!=0 and C!=0: #3
  x = E/A
  print('3',x)
elif B==0==D==A==C: #5
  print('5')
elif A//C==B//D==E//F and A%C==B%D==E%F: #1
  p = E/B
  q = -A/B
  print('1',p,q)
else: # 0 2
  x = (E*D-F*B)/(A*D-C*B)
  y = (E*A-F*C)/(A*D-C*B)
  print('2',x,y)
#print("Urav: {0}*{3} + {1}*{4} = {2}".format(A,B,E,x,y))
#print("Urav: {0}*{3} + {1}*{4} = {2}".format(C,D,F,x,y))
'''

'''
#3_srez
string = input()
print(string[2])
print(string[-2])
print(string[0:6])
print(string[:-2])
print(string[0::2])
print(string[1::2])
print(string[-1::-1])
print(string[-1::-2])
print(len(string))
'''

'''
#3_perv_i_posl
string = input()
pos1 = string.find('f')
pos2 = len(string)-string[-1::-1].find('f')-1
if pos1 == pos2:
  print(pos1)
elif pos1 == -1:
  print()
else:
  print(pos1, pos2)
'''

'''
#3_udalenie_frag
string = input()
pos1 = string.find('h')
pos2 = len(string)-string[-1::-1].find('h')-1
string2 = string[:pos1]+string[pos2+1:]
print(string2)
'''

'''
#3_povt_frag
string = input()
pos1 = string.find('h')
pos2 = len(string)-string[-1::-1].find('h')-1
#print(pos1,pos2)
if pos1 == pos2:
  print(string[pos1+1:]*2)
elif pos1 == -1:
  print()
else:
  print(string[pos1+1:pos2]*2)
'''

'''
#3_vtoroe_vhojd
string = input()
pos1 = string.find('f')
string2 = string[pos1+1:]
pos11 = string2.find('f')+1+pos1
if string.find('f')==-1:
  print('-2')
elif string2.find('f')==-1:
  print('-1')
else:
  print(pos11)
'''

'''
#3_vtoroe_vhojd
string = input()
pos = string.find(' ')
string2 = string[pos+1:]+string[pos]+string[:pos]
print(string2)
'''

'''
#3_collichestvo_slov
string = input()
col = string.count(' ') + 1
print(col)
'''

'''
#3_zamena_podstroki
string = input()
string2 = string.replace('1','one')
print(string2)
'''

'''
#3_udalenie_simvola
string = input()
string2 = string.replace('@','')
print(string2)
'''

'''
#3_zamena_vnutry
string = input()
pos1 = string.find('h')
pos2 = len(string) - string[-1::-1].find('h') - 1
string2 = string[pos1+1:pos2]
string3 = string[:pos1+1]+string2.replace('h','H')+string[pos2:]
print(string3)
'''

'''
#3_vstavka_simvolov
string = input()
print(string[0]+string[1:-1].replace('','*')+string[-1])
'''

'''
#3_zamena_tret_symb
string = input()
i = 0
while i < len(string):
  string = string.replace(string[i],'',1)
  i = i + 2
print(string)
'''

'''
#4_min4
def min4(x,y):
    minim = min(x,y)
    return minim
a = int(input())
b = int(input())
c = int(input())
d = int(input())
res = min4(min4(a,b),min4(c,d))
print(res)
'''

'''
#4_dlina_otrezka
def dlina(x,y):
    l = max(x,y)-min(x,y)
    return l
def pif(a,b):
    c = (a**2+b**2)**(0.5)
    return c
    
x1 = int(input())
y1 = int(input())
x2 = int(input())
y2 = int(input())

res = pif(dlina(x1,x2),dlina(y1,y2))
print(res)
'''

'''
#4_perimetr
def dlina(x,y):
    l = max(x,y)-min(x,y)
    return l
def pif(a,b):
    c = (a**2+b**2)**(0.5)
    return c
    
x1 = int(input())
y1 = int(input())
x2 = int(input())
y2 = int(input())
x3 = int(input())
y3 = int(input())

res = pif(dlina(x1,x2),dlina(y1,y2)) + pif(dlina(x1,x3),dlina(y1,y3)) + pif(dlina(x3,x2),dlina(y3,y2))
print('{0:.6f}'.format(res))
'''

'''
#4_prinadlegit_tochka_1
def IsPointInSquare (x,y):
    return (x**2)*(y**2) <= 1 

x = float(input())
y = float(input())

if IsPointInSquare(x,y):
  print('YES')
else:
  print('NO')
'''

'''
#4_prinadlegit_tochka_2
def IsPointInSquare(x,y):
    return abs(x) <= 1-abs(y)

x = float(input())
y = float(input())

if IsPointInSquare(x,y):
  print('YES')
else:
  print('NO')
'''

'''
#4_prinadlegit_krugu
x = float(input())
y = float(input())
xc = float(input())
yc = float(input())
r = float(input())

def R2(x,y,xc,yc):
  r2 = ((xc-x)**2+(yc-y)**2)**(0.5)
  return r2
def IsPointInCircle(x,y,xc,yc,r):
  return r >= R2(x,y,xc,yc)

if IsPointInCircle(x,y,xc,yc,r):
  print('YES')
else:
  print('NO')
'''

'''
#4_prinadlegit_ploshadi
x = int(input())
y = int(input())
def IsPointInArea(x,y):
    p1 = (y<1) and (y<=-x) and (y<=2*x+2)
    p2 = (y>1) and (y>=-x) and (y>=2*x+2)
    p3 = 2>=((-1-x)**2+(1-y)**2)**(0.5)
    p4 = 2<=((-1-x)**2+(1-y)**2)**(0.5)
    a = (p1 and p4) or (p2 and p3)
    return a
print(IsPointInArea(x,y))
'''

'''
#4_xor
x = int(input())
y = int(input())
def xor(x,y):
    return x != y
print(int(xor(x,y)))
'''

'''
#4_min_delitel
def MinDivisor(x):
    i = 1
    while i <= x:
      if (x%i==0) and (i!=1):
        break  
      i = i + 1
    return(i)

x = int(input())
print(MinDivisor(x))
'''

'''
#4_prov_prostota
def IsPrime(x):
    i = 2
    while i < x:
      if (x%i==0):
        break
      i = i + 1
    return i != x

x = int(input())
print(IsPrime(x))
'''

'''
#4_vozv_v_step
def step(a,n):
    if n == 0:
      return 1
    return a * step(a,n-1)
    
a = int(input())
n = int(input())
print(step(a,n))
'''

'''
#4_otr_step
def power(a,n):
 res = 1
 while n != 0:
  res = res * a
  n = n - 1
 return res
  
a = int(input())
n = int(input())
print(power(a,n))
'''

'''
#4_slog_ot_slog
def sum(a,b):
    a = a-1
    b = b+1
    if a < 0:
      return b-1
    sm = sum(a,b)
    return sm
       
a = int(input())
b = int(input())
minn = min(a,b)
maxn = max(a,b)
print(sum(minn,maxn))
'''

'''
#4_bystr_stepen
def step(a,n):
    if n == 0:
      return 1
    elif n%2 == 0: 
      return (a**2)**(n/2)
    else:
      return a*step(a,n-1)
    
a = int(input())
n = int(input())
print(step(a,n))
'''

'''
#4_flg_gom
def maxim(n,m):
    max_n = max(n,m)
    min_n = min(n,m)
    return(max_n,min_n)

def gcd(n,m):
    n,m = maxim(n,m)
    while n%m != 0:
      ost = n%m
      n = m
      m = ost
    return(m)
    
n = int(input())
m = int(input())
print(gcd(n,m))
'''

'''
#4_socr
def maxim(n,m):
    max_n = max(n,m)
    min_n = min(n,m)
    return(max_n,min_n)

def gcd(n,m):
    n,m = maxim(n,m)
    while n%m != 0:
      ost = n%m
      n = m
      m = ost
    return(m)
    
def ReduceFraction(n,m):
    s = gcd(n,m)
    if s!=1:
      n = n/s
      m = m/s
      ReduceFraction(n,m)
    return(n,m)  
    
n = int(input())
m = int(input())
print(ReduceFraction(n,m))
'''

'''
#4_fibbonachi
def fib(n):
    i = 2
    n_1 = n_2 = 1
    n_1 = fib2(n,i,n_1,n_2)
    return(n_1)
    
def fib2(n,i,n_1,n_2):
    if n < i:
      return(n_1)
    else:
      n_1, n_2 = n_2, n_1+n_2
      i = i + 1
      n_1 = fib2(n,i,n_1,n_2)
      return(n_1)

n = int(input())
print(fib(n))
'''

'''
#4_sochet
def C(n,k):
    if n == k:
      return 1
    elif k == 1:
      return n
    res = C(n-1,k) + C(n-1,k-1)
    return res
    
n = int(input())
k = int(input())
print(C(n,k))
'''

'''
#4_summa_posled
def s(n):
  n = int(input())
  if n == 0:
    return n
  sum = n + s(n)
  return sum

n = int(input())
print(s(n)+n)
'''

'''
#4_razvorot_posled
def pr():
    a = int(input())
    if a == 0:
      print(a)
      return 
    pr()
    print(a)
pr()
'''
